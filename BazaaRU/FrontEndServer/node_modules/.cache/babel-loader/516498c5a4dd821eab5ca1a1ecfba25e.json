{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chaea\\\\OneDrive\\\\Desktop\\\\cs431_05_frontend\\\\website\\\\src\\\\Components\\\\LoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport \"./loginForm.css\"; //Style of login form\n//functional component, not class component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginForm() {\n  _s();\n\n  // React States\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/homepage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  } // User Login info\n\n\n  const database = [//Needs to eventually be replaced with a hashmap/mySQL database\n  {\n    username: \"ac1\",\n    password: \"pi\"\n  }, {\n    username: \"ac2\",\n    password: \"phi\"\n  }]; //error messages for when user inputs invalid credentials\n\n  const errors = {\n    usernameError: \"invalid username\",\n    password: \"invalid password\"\n  }; //Event handler when user presses sign in buttom\n\n  const handleSubmit = event => {\n    //Prevent page reload\n    event.preventDefault();\n    var {\n      usernameError,\n      password\n    } = document.forms[0]; //console.log(usernameError.value);\n    // Find user login info\n\n    const userData = database.find(user => user.username === usernameError.value);\n    console.log(userData); // Compare user info\n\n    if (userData) {\n      if (userData.password !== password.value) {\n        // Invalid password\n        setErrorMessages({\n          name: \"password\",\n          message: errors.password\n        });\n      } else {\n        setIsAuthenticated(true);\n      }\n    } else {\n      // Username not found\n      setErrorMessages({\n        name: \"usernameError\",\n        message: errors.usernameError\n      });\n    }\n  }; // Generate JSX code for error message\n\n\n  const renderErrorMessage = name => name === errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: errorMessages.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 7\n  }, this); // JSX code for login form\n\n\n  const renderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"usernameError\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), renderErrorMessage(\"usernameError\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), renderErrorMessage(\"password\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), isAuthenticated ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"User is successfully logged in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this) : renderForm]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"ZSOFOecqVe3JIHfisKUgNkubo98=\");\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","Navigate","ReactDOM","LoginForm","errorMessages","setErrorMessages","isAuthenticated","setIsAuthenticated","database","username","password","errors","usernameError","handleSubmit","event","preventDefault","document","forms","userData","find","user","value","console","log","name","message","renderErrorMessage","renderForm"],"sources":["C:/Users/chaea/OneDrive/Desktop/cs431_05_frontend/website/src/Components/LoginForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./loginForm.css\"; //Style of login form\r\n\r\n//functional component, not class component\r\nfunction LoginForm() {\r\n  // React States\r\n  const [errorMessages, setErrorMessages] = useState({});\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  if (isAuthenticated) {\r\n    return <Navigate to=\"/homepage\" />;\r\n  }\r\n\r\n  // User Login info\r\n  const database = [\r\n    //Needs to eventually be replaced with a hashmap/mySQL database\r\n    {\r\n      username: \"ac1\",\r\n      password: \"pi\",\r\n    },\r\n    {\r\n      username: \"ac2\",\r\n      password: \"phi\",\r\n    },\r\n  ];\r\n\r\n  //error messages for when user inputs invalid credentials\r\n  const errors = {\r\n    usernameError: \"invalid username\",\r\n    password: \"invalid password\",\r\n  };\r\n\r\n  //Event handler when user presses sign in buttom\r\n  const handleSubmit = (event) => {\r\n    //Prevent page reload\r\n    event.preventDefault();\r\n\r\n    var { usernameError, password } = document.forms[0];\r\n\r\n    //console.log(usernameError.value);\r\n\r\n    // Find user login info\r\n    const userData = database.find(\r\n      (user) => user.username === usernameError.value\r\n    );\r\n\r\n    console.log(userData);\r\n    // Compare user info\r\n    if (userData) {\r\n      if (userData.password !== password.value) {\r\n        // Invalid password\r\n        setErrorMessages({ name: \"password\", message: errors.password });\r\n      } else {\r\n        setIsAuthenticated(true);\r\n      }\r\n    } else {\r\n      // Username not found\r\n      setErrorMessages({\r\n        name: \"usernameError\",\r\n        message: errors.usernameError,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Generate JSX code for error message\r\n  const renderErrorMessage = (name) =>\r\n    name === errorMessages.name && (\r\n      <div className=\"error\">{errorMessages.message}</div>\r\n    );\r\n\r\n  // JSX code for login form\r\n  const renderForm = (\r\n    <div className=\"form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-container\">\r\n          <label>Username </label>\r\n          <input type=\"text\" name=\"usernameError\" required />\r\n          {renderErrorMessage(\"usernameError\")}\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <label>Password </label>\r\n          <input type=\"password\" name=\"password\" required />\r\n          {renderErrorMessage(\"password\")}\r\n        </div>\r\n        <div className=\"button-container\">\r\n          <input type=\"submit\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"login-form\">\r\n        <div className=\"title\">Sign In</div>\r\n        {isAuthenticated ? (\r\n          <div>User is successfully logged in</div>\r\n        ) : (\r\n          renderForm\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}