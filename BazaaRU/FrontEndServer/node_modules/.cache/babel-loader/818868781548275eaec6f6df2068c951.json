{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chaea\\\\OneDrive\\\\Desktop\\\\cs431_05_frontend\\\\website\\\\src\\\\Components\\\\RegistrationForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport \"./registrationForm.css\"; //Style of login form\n//takes url to direct user after successful login. Can be used for re-authentication later on in addition to login page\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegistrationForm(url) {\n  _s();\n\n  // React States\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isRegistered, setIsRegistered] = useState(false);\n  const weblink = url.name; // Current Existing User Login info\n\n  const database = [//Needs to eventually be replaced with a hashmap/mySQL database\n  {\n    username: \"ac1\",\n    password: \"pi\"\n  }, {\n    username: \"ac2\",\n    password: \"phi\"\n  }]; //error messages for when user inputs invalid credentials\n\n  const errors = {\n    username: \"Username already exists\",\n    password: \"Password does not meet requirements\"\n  }; //Event handler when user presses sign in buttom\n\n  const handleSubmit = event => {\n    //Prevent page reload\n    event.preventDefault();\n    var {\n      username,\n      password\n    } = document.forms[0]; //grabs inputted information\n    // Find user login info\n\n    const userData = database.find(user => user.username === username.value);\n\n    if (userData) {\n      setErrorMessages({\n        name: \"username\",\n        message: errors.username\n      });\n    } else {//if password doesnt meet minimum requirements setErrorMessages({ name: \"password\", message: errors.password });\n      //else\n      //create new user to add to database\n      //setIsRegistered(true);\n    }\n  }; // Generate JSX code for error message\n\n\n  const renderErrorMessage = name => name === errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: errorMessages.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }, this); // JSX code for login form\n\n\n  const renderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), renderErrorMessage(\"username\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), renderErrorMessage(\"password\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), isRegistered ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"User account successfully created!\", /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"Registration-link\",\n          href: weblink,\n          children: \"Please click here to return to the login page.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this) : renderForm]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegistrationForm, \"KVRBv9CEEXlLmUAw+Fmg/BYpYuk=\");\n\n_c = RegistrationForm;\nexport default RegistrationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"names":["React","useState","Navigate","ReactDOM","RegistrationForm","url","errorMessages","setErrorMessages","isRegistered","setIsRegistered","weblink","name","database","username","password","errors","handleSubmit","event","preventDefault","document","forms","userData","find","user","value","message","renderErrorMessage","renderForm"],"sources":["C:/Users/chaea/OneDrive/Desktop/cs431_05_frontend/website/src/Components/RegistrationForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./registrationForm.css\"; //Style of login form\r\n\r\n//takes url to direct user after successful login. Can be used for re-authentication later on in addition to login page\r\nfunction RegistrationForm(url) {\r\n  // React States\r\n  const [errorMessages, setErrorMessages] = useState({});\r\n  const [isRegistered, setIsRegistered] = useState(false);\r\n\r\n  const weblink = url.name;\r\n\r\n  // Current Existing User Login info\r\n  const database = [\r\n    //Needs to eventually be replaced with a hashmap/mySQL database\r\n    {\r\n      username: \"ac1\",\r\n      password: \"pi\",\r\n    },\r\n    {\r\n      username: \"ac2\",\r\n      password: \"phi\",\r\n    },\r\n  ];\r\n\r\n  //error messages for when user inputs invalid credentials\r\n  const errors = {\r\n    username: \"Username already exists\",\r\n    password: \"Password does not meet requirements\",\r\n  };\r\n\r\n  //Event handler when user presses sign in buttom\r\n  const handleSubmit = (event) => {\r\n    //Prevent page reload\r\n    event.preventDefault();\r\n\r\n    var { username, password } = document.forms[0]; //grabs inputted information\r\n\r\n    // Find user login info\r\n    const userData = database.find((user) => user.username === username.value);\r\n\r\n    if (userData) {\r\n      setErrorMessages({\r\n        name: \"username\",\r\n        message: errors.username,\r\n      });\r\n    } else {\r\n      //if password doesnt meet minimum requirements setErrorMessages({ name: \"password\", message: errors.password });\r\n      //else\r\n      //create new user to add to database\r\n      //setIsRegistered(true);\r\n    }\r\n  };\r\n\r\n  // Generate JSX code for error message\r\n  const renderErrorMessage = (name) =>\r\n    name === errorMessages.name && (\r\n      <div className=\"error\">{errorMessages.message}</div>\r\n    );\r\n\r\n  // JSX code for login form\r\n  const renderForm = (\r\n    <div className=\"form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-container\">\r\n          <label>Username </label>\r\n          <input type=\"text\" name=\"username\" required />\r\n          {renderErrorMessage(\"username\")}\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <label>Password </label>\r\n          <input type=\"password\" name=\"password\" required />\r\n          {renderErrorMessage(\"password\")}\r\n        </div>\r\n        <div className=\"button-container\">\r\n          <input type=\"submit\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"login-form\">\r\n        <div className=\"title\">Registration</div>\r\n        {isRegistered ? (\r\n          <div>\r\n            User account successfully created!\r\n            <a className=\"Registration-link\" href={weblink}>\r\n              Please click here to return to the login page.\r\n            </a>\r\n          </div>\r\n        ) : (\r\n          renderForm\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegistrationForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}