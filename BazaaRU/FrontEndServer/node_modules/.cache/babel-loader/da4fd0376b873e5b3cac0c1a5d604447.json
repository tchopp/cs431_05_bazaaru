{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chaea\\\\OneDrive\\\\Desktop\\\\cs431_05_frontend\\\\website\\\\src\\\\Components\\\\LoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\nimport \"./loginForm.css\"; //Style of login form\n//functional component, not class component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginForm(url) {\n  _s();\n\n  // React States\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const navigate = useNavigate();\n  const webLink = url;\n  console.log(webLink.type); // User Login info\n\n  const database = [//Needs to eventually be replaced with a hashmap/mySQL database\n  {\n    username: \"ac1\",\n    password: \"pi\"\n  }, {\n    username: \"ac2\",\n    password: \"phi\"\n  }]; //error messages for when user inputs invalid credentials\n\n  const errors = {\n    username: \"invalid username\",\n    password: \"invalid password\"\n  }; //Event handler when user presses sign in buttom\n\n  const handleSubmit = event => {\n    //Prevent page reload\n    event.preventDefault();\n    var {\n      username,\n      password\n    } = document.forms[0]; //grabs inputted information\n    // Find user login info\n\n    const userData = database.find(user => user.username === username.value); // Compare user info\n\n    if (userData) {\n      if (userData.password !== password.value) {\n        // Invalid password\n        setErrorMessages({\n          name: \"password\",\n          message: errors.password\n        });\n      } else {\n        setIsAuthenticated(true);\n      }\n    } else {\n      // Username not found\n      setErrorMessages({\n        name: \"username\",\n        message: errors.username\n      });\n    }\n  }; // Generate JSX code for error message\n\n\n  const renderErrorMessage = name => name === errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: errorMessages.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }, this); // JSX code for login form\n\n\n  const renderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), renderErrorMessage(\"username\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), renderErrorMessage(\"password\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), isAuthenticated ? navigate(\"/homepage\") : renderForm]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"Pxjqw8ERuKmibnIY76nfiOm0Tbw=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","Navigate","useNavigate","ReactDOM","LoginForm","url","errorMessages","setErrorMessages","isAuthenticated","setIsAuthenticated","navigate","webLink","console","log","type","database","username","password","errors","handleSubmit","event","preventDefault","document","forms","userData","find","user","value","name","message","renderErrorMessage","renderForm"],"sources":["C:/Users/chaea/OneDrive/Desktop/cs431_05_frontend/website/src/Components/LoginForm.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./loginForm.css\"; //Style of login form\r\n\r\n//functional component, not class component\r\nfunction LoginForm(url) {\r\n  // React States\r\n  const [errorMessages, setErrorMessages] = useState({});\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const navigate = useNavigate();\r\n  const webLink = url;\r\n\r\n  console.log(webLink.type);\r\n  // User Login info\r\n  const database = [\r\n    //Needs to eventually be replaced with a hashmap/mySQL database\r\n    {\r\n      username: \"ac1\",\r\n      password: \"pi\",\r\n    },\r\n    {\r\n      username: \"ac2\",\r\n      password: \"phi\",\r\n    },\r\n  ];\r\n\r\n  //error messages for when user inputs invalid credentials\r\n  const errors = {\r\n    username: \"invalid username\",\r\n    password: \"invalid password\",\r\n  };\r\n\r\n  //Event handler when user presses sign in buttom\r\n  const handleSubmit = (event) => {\r\n    //Prevent page reload\r\n    event.preventDefault();\r\n\r\n    var { username, password } = document.forms[0]; //grabs inputted information\r\n\r\n    // Find user login info\r\n    const userData = database.find((user) => user.username === username.value);\r\n\r\n    // Compare user info\r\n    if (userData) {\r\n      if (userData.password !== password.value) {\r\n        // Invalid password\r\n        setErrorMessages({ name: \"password\", message: errors.password });\r\n      } else {\r\n        setIsAuthenticated(true);\r\n      }\r\n    } else {\r\n      // Username not found\r\n      setErrorMessages({\r\n        name: \"username\",\r\n        message: errors.username,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Generate JSX code for error message\r\n  const renderErrorMessage = (name) =>\r\n    name === errorMessages.name && (\r\n      <div className=\"error\">{errorMessages.message}</div>\r\n    );\r\n\r\n  // JSX code for login form\r\n  const renderForm = (\r\n    <div className=\"form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-container\">\r\n          <label>Username </label>\r\n          <input type=\"text\" name=\"username\" required />\r\n          {renderErrorMessage(\"username\")}\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <label>Password </label>\r\n          <input type=\"password\" name=\"password\" required />\r\n          {renderErrorMessage(\"password\")}\r\n        </div>\r\n        <div className=\"button-container\">\r\n          <input type=\"submit\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"login-form\">\r\n        <div className=\"title\">Sign In</div>\r\n        {isAuthenticated ? navigate(\"/homepage\") : renderForm}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAO,iBAAP,C,CAA0B;AAE1B;;;;AACA,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;EAAA;;EACtB;EACA,MAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;EACA,MAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,KAAD,CAAtD;EACA,MAAMU,QAAQ,GAAGR,WAAW,EAA5B;EACA,MAAMS,OAAO,GAAGN,GAAhB;EAEAO,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,IAApB,EAPsB,CAQtB;;EACA,MAAMC,QAAQ,GAAG,CACf;EACA;IACEC,QAAQ,EAAE,KADZ;IAEEC,QAAQ,EAAE;EAFZ,CAFe,EAMf;IACED,QAAQ,EAAE,KADZ;IAEEC,QAAQ,EAAE;EAFZ,CANe,CAAjB,CATsB,CAqBtB;;EACA,MAAMC,MAAM,GAAG;IACbF,QAAQ,EAAE,kBADG;IAEbC,QAAQ,EAAE;EAFG,CAAf,CAtBsB,CA2BtB;;EACA,MAAME,YAAY,GAAIC,KAAD,IAAW;IAC9B;IACAA,KAAK,CAACC,cAAN;IAEA,IAAI;MAAEL,QAAF;MAAYC;IAAZ,IAAyBK,QAAQ,CAACC,KAAT,CAAe,CAAf,CAA7B,CAJ8B,CAIkB;IAEhD;;IACA,MAAMC,QAAQ,GAAGT,QAAQ,CAACU,IAAT,CAAeC,IAAD,IAAUA,IAAI,CAACV,QAAL,KAAkBA,QAAQ,CAACW,KAAnD,CAAjB,CAP8B,CAS9B;;IACA,IAAIH,QAAJ,EAAc;MACZ,IAAIA,QAAQ,CAACP,QAAT,KAAsBA,QAAQ,CAACU,KAAnC,EAA0C;QACxC;QACApB,gBAAgB,CAAC;UAAEqB,IAAI,EAAE,UAAR;UAAoBC,OAAO,EAAEX,MAAM,CAACD;QAApC,CAAD,CAAhB;MACD,CAHD,MAGO;QACLR,kBAAkB,CAAC,IAAD,CAAlB;MACD;IACF,CAPD,MAOO;MACL;MACAF,gBAAgB,CAAC;QACfqB,IAAI,EAAE,UADS;QAEfC,OAAO,EAAEX,MAAM,CAACF;MAFD,CAAD,CAAhB;IAID;EACF,CAxBD,CA5BsB,CAsDtB;;;EACA,MAAMc,kBAAkB,GAAIF,IAAD,IACzBA,IAAI,KAAKtB,aAAa,CAACsB,IAAvB,iBACE;IAAK,SAAS,EAAC,OAAf;IAAA,UAAwBtB,aAAa,CAACuB;EAAtC;IAAA;IAAA;IAAA;EAAA,QAFJ,CAvDsB,CA4DtB;;;EACA,MAAME,UAAU,gBACd;IAAK,SAAS,EAAC,MAAf;IAAA,uBACE;MAAM,QAAQ,EAAEZ,YAAhB;MAAA,wBACE;QAAK,SAAS,EAAC,iBAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,MAAZ;UAAmB,IAAI,EAAC,UAAxB;UAAmC,QAAQ;QAA3C;UAAA;UAAA;UAAA;QAAA,QAFF,EAGGW,kBAAkB,CAAC,UAAD,CAHrB;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAME;QAAK,SAAS,EAAC,iBAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,UAAZ;UAAuB,IAAI,EAAC,UAA5B;UAAuC,QAAQ;QAA/C;UAAA;UAAA;UAAA;QAAA,QAFF,EAGGA,kBAAkB,CAAC,UAAD,CAHrB;MAAA;QAAA;QAAA;QAAA;MAAA,QANF,eAWE;QAAK,SAAS,EAAC,kBAAf;QAAA,uBACE;UAAO,IAAI,EAAC;QAAZ;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAXF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;;EAoBA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE;MAAK,SAAS,EAAC,YAAf;MAAA,wBACE;QAAK,SAAS,EAAC,OAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAEGtB,eAAe,GAAGE,QAAQ,CAAC,WAAD,CAAX,GAA2BqB,UAF7C;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;GAzFQ3B,S;UAIUF,W;;;KAJVE,S;AA2FT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}